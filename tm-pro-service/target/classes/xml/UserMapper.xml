<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.tm.pro.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="org.tm.pro.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="login_pass" jdbcType="VARCHAR" property="loginPass" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="locked_state" jdbcType="VARCHAR" property="lockedState" />
    <result column="disabled_state" jdbcType="VARCHAR" property="disabledState" />
    <result column="expired_time" jdbcType="BIGINT" property="expiredTime" />
    <result column="created_time" jdbcType="BIGINT" property="createdTime" />
    <result column="updated_time" jdbcType="BIGINT" property="updatedTime" />
    <result column="last_login_time" jdbcType="BIGINT" property="lastLoginTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, login_name, login_pass, username, gender, locked_state, disabled_state, expired_time, 
    created_time, updated_time, last_login_time
  </sql>
  <select id="selectByExample" parameterType="org.tm.pro.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.tm.pro.entity.UserExample">
    delete from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.tm.pro.entity.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_user (login_name, login_pass, username, 
      gender, locked_state, disabled_state, 
      expired_time, created_time, updated_time, 
      last_login_time)
    values (#{loginName,jdbcType=VARCHAR}, #{loginPass,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{lockedState,jdbcType=VARCHAR}, #{disabledState,jdbcType=VARCHAR}, 
      #{expiredTime,jdbcType=BIGINT}, #{createdTime,jdbcType=BIGINT}, #{updatedTime,jdbcType=BIGINT}, 
      #{lastLoginTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="org.tm.pro.entity.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginName != null">
        login_name,
      </if>
      <if test="loginPass != null">
        login_pass,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="lockedState != null">
        locked_state,
      </if>
      <if test="disabledState != null">
        disabled_state,
      </if>
      <if test="expiredTime != null">
        expired_time,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPass != null">
        #{loginPass,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="lockedState != null">
        #{lockedState,jdbcType=VARCHAR},
      </if>
      <if test="disabledState != null">
        #{disabledState,jdbcType=VARCHAR},
      </if>
      <if test="expiredTime != null">
        #{expiredTime,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=BIGINT},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.tm.pro.entity.UserExample" resultType="java.lang.Long">
    select count(*) from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loginName != null">
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.loginPass != null">
        login_pass = #{record.loginPass,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.lockedState != null">
        locked_state = #{record.lockedState,jdbcType=VARCHAR},
      </if>
      <if test="record.disabledState != null">
        disabled_state = #{record.disabledState,jdbcType=VARCHAR},
      </if>
      <if test="record.expiredTime != null">
        expired_time = #{record.expiredTime,jdbcType=BIGINT},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=BIGINT},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=BIGINT},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_user
    set id = #{record.id,jdbcType=INTEGER},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      login_pass = #{record.loginPass,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      locked_state = #{record.lockedState,jdbcType=VARCHAR},
      disabled_state = #{record.disabledState,jdbcType=VARCHAR},
      expired_time = #{record.expiredTime,jdbcType=BIGINT},
      created_time = #{record.createdTime,jdbcType=BIGINT},
      updated_time = #{record.updatedTime,jdbcType=BIGINT},
      last_login_time = #{record.lastLoginTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.tm.pro.entity.User">
    update tb_user
    <set>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPass != null">
        login_pass = #{loginPass,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="lockedState != null">
        locked_state = #{lockedState,jdbcType=VARCHAR},
      </if>
      <if test="disabledState != null">
        disabled_state = #{disabledState,jdbcType=VARCHAR},
      </if>
      <if test="expiredTime != null">
        expired_time = #{expiredTime,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=BIGINT},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.tm.pro.entity.User">
    update tb_user
    set login_name = #{loginName,jdbcType=VARCHAR},
      login_pass = #{loginPass,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      locked_state = #{lockedState,jdbcType=VARCHAR},
      disabled_state = #{disabledState,jdbcType=VARCHAR},
      expired_time = #{expiredTime,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=BIGINT},
      updated_time = #{updatedTime,jdbcType=BIGINT},
      last_login_time = #{lastLoginTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>